/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Core, CoreInterface } from "../Core";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_cell",
        type: "uint256",
      },
    ],
    name: "TokenAddedToTrade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_cell",
        type: "uint256",
      },
    ],
    name: "TokenRemovedFromTrade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TradeExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
    ],
    name: "TradeFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_starter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721",
        name: "_starterContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721",
        name: "_receiverContract",
        type: "address",
      },
    ],
    name: "TradeStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isReady",
        type: "bool",
      },
    ],
    name: "UserTradeStateChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cell",
        type: "uint256",
      },
    ],
    name: "addTokenToTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "changeUserReadiness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
    ],
    name: "getTrade",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "enum Core.TradeState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_cell",
        type: "uint256",
      },
    ],
    name: "removeTokenFromTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tradeId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_starter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "_starterContractAddress",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "_receiverContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountOfCells",
        type: "uint256",
      },
    ],
    name: "startTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611423806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301e82cb214610067578063150b7a021461008c5780635025cdbe1461016f57806373a02bdf146101bb578063a3b13799146101e4578063eb0ca5ed14610269575b600080fd5b61008a6004803603604081101561007d57600080fd5b508035906020013561028e565b005b610152600480360360808110156100a257600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156100dd57600080fd5b8201836020820111156100ef57600080fd5b8035906020019184600183028401116401000000008311171561011157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104d8945050505050565b604080516001600160e01b03199092168252519081900360200190f35b61008a600480360360c081101561018557600080fd5b508035906001600160a01b0360208201358116916040810135821691606082013581169160808101359091169060a001356104e8565b61008a600480360360608110156101d157600080fd5b5080359060208101359060400135610845565b610201600480360360208110156101fa57600080fd5b5035610c68565b60405180876001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b0316815260200183815260200182600281111561025357fe5b8152602001965050505050505060405180910390f35b61008a6004803603604081101561027f57600080fd5b50803590602001351515610d2a565b6000828152600260209081526040808320848452909152902054806102fa576040805162461bcd60e51b815260206004820152601d60248201527f436f72653a206e6f20746f6b656e20666f756e6420666f722063656c6c000000604482015290519081900360640190fd5b610302610f7b565b60008481526004602090815260408083208584529091529020546001600160a01b0390811691161461037b576040805162461bcd60e51b815260206004820152601960248201527f436f72653a20756e617574686f72697a6564207369676e657200000000000000604482015290519081900360640190fd5b6000838152600260209081526040808320858452825280832083905585835260048252808320848452825280832080546001600160a01b031916905585835260019091528120816103ca610f7b565b6001600160a01b03908116825260208083019390935260409182016000208251808401909352805482168352600101541691810182905291506342842e0e30610411610f7b565b856040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b15801561046857600080fd5b505af115801561047c573d6000803e3d6000fd5b50505050837f6653eca91710546f65b8fa020b88dcbf531a0a3d5ffd5768a198c38db0ed308c6104aa610f7b565b604080516001600160a01b03909216825260208201869052818101879052519081900360600190a250505050565b630a85bd0160e11b949350505050565b60008087815260208190526040902060030154600160a01b900460ff16600281111561051057fe5b14610562576040805162461bcd60e51b815260206004820152601a60248201527f436f72653a20747261646520616c726561647920657869737473000000000000604482015290519081900360640190fd5b61056a611340565b6001600160a01b038681168252858116602083015284811660408301528316606082015260a081018290526001608082018190525060008781526020818152604091829020835181546001600160a01b03199081166001600160a01b03928316178355928501516001830180548516918316919091179055928401516002808301805485169286169290921790915560608501516003830180549094169416939093178083556080850151859492939092909160ff60a01b191690600160a01b90849081111561063657fe5b021790555060a0820151816004015590505060006040518060400160405280886001600160a01b03168152602001866001600160a01b0316815250905060006040518060400160405280896001600160a01b03168152602001876001600160a01b0316815250905081600160008b815260200190815260200160002060008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505080600160008b81526020019081526020016000206000896001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050887f580af8f995020488ea3505642d7f1b31f1f22a0e0252146ab9a4a981736f944b8989898960405180856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b03168152602001826001600160a01b0316815260200194505050505060405180910390a2505050505050505050565b60008381526001602052604081208161085c610f7b565b6001600160a01b0390811682526020808301939093526040918201600090812083518085018552815484168152600191820154841681870152898352828652848320855160c081018752815486168152928101548516968301969096526002808701548516958301959095526003860154938416606083015295509093909290916080840191600160a01b90910460ff16908111156108f757fe5b600281111561090257fe5b815260049190910154602091820152600087815260028252604080822087835290925220549091508361097c576040805162461bcd60e51b815260206004820152601760248201527f436f72653a2063616e6e6f74207573652063656c6c2030000000000000000000604482015290519081900360640190fd5b8160a001518411156109bf5760405162461bcd60e51b81526004018080602001828103825260328152602001806113bc6032913960400191505060405180910390fd5b8015610a12576040805162461bcd60e51b815260206004820152601e60248201527f436f72653a20746f6b656e2063656c6c206e6f7420617661696c61626c650000604482015290519081900360640190fd5b610a28610a1d610f7b565b868560200151610f7f565b610a79576040805162461bcd60e51b815260206004820152601860248201527f436f72653a206e6f74206f776e6572206f6620746f6b656e0000000000000000604482015290519081900360640190fd5b610a8783602001518661100d565b610ad8576040805162461bcd60e51b815260206004820152601b60248201527f436f72653a20636f6e7472616374206e6f7420617070726f7665640000000000604482015290519081900360640190fd5b6001600087815260208190526040902060030154600160a01b900460ff166002811115610b0157fe5b14610b3d5760405162461bcd60e51b81526004018080602001828103825260218152602001806113776021913960400191505060405180910390fd5b610b45610f7b565b6000878152600460209081526040808320898452825280832080546001600160a01b0319166001600160a01b03958616179055898352600282528083208884528252909120879055840151166342842e0e610b9e610f7b565b30886040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015610bf657600080fd5b505af1158015610c0a573d6000803e3d6000fd5b50505050857f769ff2b528576bde4dce5377d3237e04734e810a47f4b2b8f1cbe4a5c2bae75d610c38610f7b565b604080516001600160a01b03909216825260208201899052818101889052519081900360600190a2505050505050565b600081815260208181526040808320815160c08101835281546001600160a01b0390811682526001830154811694820194909452600280830154851693820193909352600382015493841660608201528493849384938493849384939192916080840191600160a01b900460ff1690811115610ce057fe5b6002811115610ceb57fe5b8152600491909101546020918201528151908201516040830151606084015160a0850151608090950151939d929c50909a509850919650945092505050565b60008281526020819052604081209082610d7757600084815260036020526040812090610d55610f7b565b6001600160a01b0316815260208101919091526040016000205460ff16610dad565b600084815260036020526040812090610d8e610f7b565b6001600160a01b0316815260208101919091526040016000205460ff16155b82549091506001600160a01b0316610dc3610f7b565b6001600160a01b03161480610df4575060018201546001600160a01b0316610de9610f7b565b6001600160a01b0316145b610e45576040805162461bcd60e51b815260206004820181905260248201527f436f72653a2075736572206e6f7420696e766f6c76656420696e207472616465604482015290519081900360640190fd5b80610e815760405162461bcd60e51b81526004018080602001828103825260248152602001806113986024913960400191505060405180910390fd5b60016003830154600160a01b900460ff166002811115610e9d57fe5b14610ed95760405162461bcd60e51b81526004018080602001828103825260218152602001806113776021913960400191505060405180910390fd5b60008481526003602052604081208491610ef1610f7b565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558215610f2957610f29848361109a565b837fe9070541d8cc7a264a3ad52760b3f6004b5d4270d0fb66da12d4c821a97857ee610f53610f7b565b604080516001600160a01b03909216825286151560208301528051918290030190a250505050565b3390565b6000836001600160a01b0316826001600160a01b0316636352211e856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610fcf57600080fd5b505afa158015610fe3573d6000803e3d6000fd5b505050506040513d6020811015610ff957600080fd5b50516001600160a01b031614949350505050565b6000306001600160a01b0316836001600160a01b031663081812fc846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561105d57600080fd5b505afa158015611071573d6000803e3d6000fd5b505050506040513d602081101561108757600080fd5b50516001600160a01b0316149392505050565b600082815260036020908152604080832084546001600160a01b039081168552925280832054600185015490921683529091205460ff91821691168180156110df5750805b156111aa5760038301805460ff60a01b1916600160a11b17908190556040805160c08101825285546001600160a01b0390811682526001870154811660208301526002808801548216938301939093528316606082015261117692879287916080840191600160a01b90910460ff169081111561115857fe5b600281111561116357fe5b81526020016004820154815250506111b0565b6040805185815290517f604ff1c4830f6140ee58d3cd1a0b23f3a74548127ee81bdcb2965d038a2f9b9e9181900360200190a15b50505050565b60015b8160a00151811161121057600083815260026020908152604080832084845282528083205486845260048352818420818552909252909120546001600160a01b0316811561120657611206848383611215565b50506001016111b3565b505050565b82516001600160a01b03828116911614156112a65760408084015160208501518251632142170760e11b81523060048201526001600160a01b0391821660248201526044810186905292519116916342842e0e91606480830192600092919082900301818387803b15801561128957600080fd5b505af115801561129d573d6000803e3d6000fd5b50505050611210565b82602001516001600160a01b0316816001600160a01b03161415611210576060830151835160408051632142170760e11b81523060048201526001600160a01b03928316602482015260448101869052905191909216916342842e0e91606480830192600092919082900301818387803b15801561132357600080fd5b505af1158015611337573d6000803e3d6000fd5b50505050505050565b6040805160c08101825260008082526020820181905291810182905260608101829052906080820190815260200160008152509056fe436f72653a2074726164652068617320616c72656164792066696e616c697a6564436f72653a207573657220697320726561647920746f20747261646520616c7265616479436f72653a2063656c6c2063616e6e6f74206265206d6f7265207468616e206d6178206e756d626572206f662063656c6c73a26469706673582212208f101e976517ee955e3a9d4148737d3a6197cba6e923909774356b38625e069a64736f6c63430007060033";

export class Core__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Core> {
    return super.deploy(overrides || {}) as Promise<Core>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Core {
    return super.attach(address) as Core;
  }
  connect(signer: Signer): Core__factory {
    return super.connect(signer) as Core__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoreInterface {
    return new utils.Interface(_abi) as CoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Core {
    return new Contract(address, _abi, signerOrProvider) as Core;
  }
}
