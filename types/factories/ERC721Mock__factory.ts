/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721Mock, ERC721MockInterface } from "../ERC721Mock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001600a553480156200001657600080fd5b50604080518082018252600a8152692a32b9ba102a37b5b2b760b11b60208083019190915282518084019093526002835261151560f21b9083015290620000646301ffc9a760e01b620000ce565b81516200007990600690602085019062000153565b5080516200008f90600790602084019062000153565b50620000a26380ac58cd60e01b620000ce565b620000b4635b5e139f60e01b620000ce565b620000c663780e9d6360e01b620000ce565b5050620001ff565b6001600160e01b031980821614156200012e576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200018b5760008555620001d6565b82601f10620001a657805160ff1916838001178555620001d6565b82800160010185558215620001d6579182015b82811115620001d6578251825591602001919060010190620001b9565b50620001e4929150620001e8565b5090565b5b80821115620001e45760008155600101620001e9565b611b01806200020f6000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c806342842e0e116100ad57806395d89b411161007157806395d89b411461036e578063a22cb46514610376578063b88d4fde146103a4578063c87b56dd1461046a578063e985e9c51461048757610120565b806342842e0e146102d05780634f6ccce7146103065780636352211e146103235780636c0360eb1461034057806370a082311461034857610120565b8063095ea7b3116100f4578063095ea7b3146102305780631249c58b1461025e57806318160ddd1461026657806323b872dd1461026e5780632f745c59146102a457610120565b80629a9b7b1461012557806301ffc9a71461013f57806306fdde031461017a578063081812fc146101f7575b600080fd5b61012d6104b5565b60408051918252519081900360200190f35b6101666004803603602081101561015557600080fd5b50356001600160e01b0319166104bb565b604080519115158252519081900360200190f35b6101826104de565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101bc5781810151838201526020016101a4565b50505050905090810190601f1680156101e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102146004803603602081101561020d57600080fd5b5035610574565b604080516001600160a01b039092168252519081900360200190f35b61025c6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356105d6565b005b61025c6106b1565b61012d6106c9565b61025c6004803603606081101561028457600080fd5b506001600160a01b038135811691602081013590911690604001356106da565b61012d600480360360408110156102ba57600080fd5b506001600160a01b038135169060200135610731565b61025c600480360360608110156102e657600080fd5b506001600160a01b0381358116916020810135909116906040013561075c565b61012d6004803603602081101561031c57600080fd5b5035610777565b6102146004803603602081101561033957600080fd5b503561078d565b6101826107b5565b61012d6004803603602081101561035e57600080fd5b50356001600160a01b0316610816565b61018261087e565b61025c6004803603604081101561038c57600080fd5b506001600160a01b03813516906020013515156108df565b61025c600480360360808110156103ba57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103f557600080fd5b82018360208201111561040757600080fd5b8035906020019184600183028401116401000000008311171561042957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109e4945050505050565b6101826004803603602081101561048057600080fd5b5035610a42565b6101666004803603604081101561049d57600080fd5b506001600160a01b0381358116916020013516610cc3565b600a5481565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561056a5780601f1061053f5761010080835404028352916020019161056a565b820191906000526020600020905b81548152906001019060200180831161054d57829003601f168201915b5050505050905090565b600061057f82610cf1565b6105ba5760405162461bcd60e51b815260040180806020018281038252602c8152602001806119f6602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105e18261078d565b9050806001600160a01b0316836001600160a01b031614156106345760405162461bcd60e51b8152600401808060200182810382526021815260200180611a7a6021913960400191505060405180910390fd5b806001600160a01b0316610646610cfe565b6001600160a01b03161480610667575061066781610662610cfe565b610cc3565b6106a25760405162461bcd60e51b81526004018080602001828103825260388152602001806119496038913960400191505060405180910390fd5b6106ac8383610d02565b505050565b600a8054600181019091556106c63382610d70565b50565b60006106d56002610e9e565b905090565b6106eb6106e5610cfe565b82610ea9565b6107265760405162461bcd60e51b8152600401808060200182810382526031815260200180611a9b6031913960400191505060405180910390fd5b6106ac838383610f4d565b6001600160a01b03821660009081526001602052604081206107539083611099565b90505b92915050565b6106ac838383604051806020016040528060008152506109e4565b6000806107856002846110a5565b509392505050565b6000610756826040518060600160405280602981526020016119ab60299139600291906110c1565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561056a5780601f1061053f5761010080835404028352916020019161056a565b60006001600160a01b03821661085d5760405162461bcd60e51b815260040180806020018281038252602a815260200180611981602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061075690610e9e565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561056a5780601f1061053f5761010080835404028352916020019161056a565b6108e7610cfe565b6001600160a01b0316826001600160a01b0316141561094d576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061095a610cfe565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561099e610cfe565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6109f56109ef610cfe565b83610ea9565b610a305760405162461bcd60e51b8152600401808060200182810382526031815260200180611a9b6031913960400191505060405180910390fd5b610a3c848484846110d8565b50505050565b6060610a4d82610cf1565b610a885760405162461bcd60e51b815260040180806020018281038252602f815260200180611a4b602f913960400191505060405180910390fd5b60008281526008602090815260408083208054825160026001831615610100026000190190921691909104601f810185900485028201850190935282815292909190830182828015610b1b5780601f10610af057610100808354040283529160200191610b1b565b820191906000526020600020905b815481529060010190602001808311610afe57829003601f168201915b505050505090506000610b2c6107b5565b9050805160001415610b40575090506104d9565b815115610c015780826040516020018083805190602001908083835b60208310610b7b5780518252601f199092019160209182019101610b5c565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610bc35780518252601f199092019160209182019101610ba4565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052925050506104d9565b80610c0b8561112a565b6040516020018083805190602001908083835b60208310610c3d5780518252601f199092019160209182019101610c1e565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610c855780518252601f199092019160209182019101610c66565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000610756600283611205565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d378261078d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610dcb576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610dd481610cf1565b15610e26576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b610e32600083836106ac565b6001600160a01b0382166000908152600160205260409020610e549082611211565b50610e616002828461121d565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600061075682611233565b6000610eb482610cf1565b610eef5760405162461bcd60e51b815260040180806020018281038252602c81526020018061191d602c913960400191505060405180910390fd5b6000610efa8361078d565b9050806001600160a01b0316846001600160a01b03161480610f355750836001600160a01b0316610f2a84610574565b6001600160a01b0316145b80610f455750610f458185610cc3565b949350505050565b826001600160a01b0316610f608261078d565b6001600160a01b031614610fa55760405162461bcd60e51b8152600401808060200182810382526029815260200180611a226029913960400191505060405180910390fd5b6001600160a01b038216610fea5760405162461bcd60e51b81526004018080602001828103825260248152602001806118f96024913960400191505060405180910390fd5b610ff58383836106ac565b611000600082610d02565b6001600160a01b03831660009081526001602052604090206110229082611237565b506001600160a01b03821660009081526001602052604090206110459082611211565b506110526002828461121d565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006107538383611243565b60008080806110b486866112a7565b9097909650945050505050565b60006110ce848484611322565b90505b9392505050565b6110e3848484610f4d565b6110ef848484846113ec565b610a3c5760405162461bcd60e51b81526004018080602001828103825260328152602001806118c76032913960400191505060405180910390fd5b60608161114f57506040805180820190915260018152600360fc1b60208201526104d9565b8160005b811561116757600101600a82049150611153565b60008167ffffffffffffffff8111801561118057600080fd5b506040519080825280601f01601f1916602001820160405280156111ab576020820181803683370190505b50859350905060001982015b83156111fc57600a840660300160f81b828280600190039350815181106111da57fe5b60200101906001600160f81b031916908160001a905350600a840493506111b7565b50949350505050565b60006107538383611554565b6000610753838361156c565b60006110ce84846001600160a01b0385166115b6565b5490565b6000610753838361164d565b815460009082106112855760405162461bcd60e51b81526004018080602001828103825260228152602001806118a56022913960400191505060405180910390fd5b82600001828154811061129457fe5b9060005260206000200154905092915050565b8154600090819083106112eb5760405162461bcd60e51b81526004018080602001828103825260228152602001806119d46022913960400191505060405180910390fd5b60008460000184815481106112fc57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816113bd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561138257818101518382015260200161136a565b50505050905090810190601f1680156113af5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106113d057fe5b9060005260206000209060020201600101549150509392505050565b6000611400846001600160a01b0316611713565b61140c57506001610f45565b600061151a630a85bd0160e11b611421610cfe565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611488578181015183820152602001611470565b50505050905090810190601f1680156114b55780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050506040518060600160405280603281526020016118c7603291396001600160a01b0388169190611719565b9050600081806020019051602081101561153357600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b60006115788383611554565b6115ae57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610756565b506000610756565b60008281526001840160205260408120548061161b5750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556110d1565b8285600001600183038154811061162e57fe5b90600052602060002090600202016001018190555060009150506110d1565b60008181526001830160205260408120548015611709578354600019808301919081019060009087908390811061168057fe5b906000526020600020015490508087600001848154811061169d57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806116cd57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610756565b6000915050610756565b3b151590565b60606110ce84846000858561172d85611713565b61177e576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106117bc5780518252601f19909201916020918201910161179d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461181e576040519150601f19603f3d011682016040523d82523d6000602084013e611823565b606091505b509150915061183382828661183e565b979650505050505050565b6060831561184d5750816110d1565b82511561185d5782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561138257818101518382015260200161136a56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220a561fbfceea594942adbb337e4c9e93c361c19ec74fc2b64194cc0c060b0ad4b64736f6c63430007060033";

export class ERC721Mock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Mock> {
    return super.deploy(overrides || {}) as Promise<ERC721Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Mock {
    return super.attach(address) as ERC721Mock;
  }
  connect(signer: Signer): ERC721Mock__factory {
    return super.connect(signer) as ERC721Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MockInterface {
    return new utils.Interface(_abi) as ERC721MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC721Mock;
  }
}
